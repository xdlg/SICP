(define (f-rec n)
    (if (< n 3)
        n
        (+ (f-rec (- n 1)) (* 2 (f-rec (- n 2))) (* 3 (f-rec (- n 3))))
    )
)

(define (f-iter n)
    (f-iter-priv n 0 0)
)

(define (f-iter-priv n value count)
    (if (= count n)
        value

    )
)
