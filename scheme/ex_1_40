(define (deriv g)
    (lambda (x)
        (/ (- (g (+ x dx)) (g x)) dx)
    )
)

(define dx 0.00001)

(define (newton-transform g)
    (lambda (x)
        (- x (/ (g x) ((deriv g) x)))
    )
)

(define (newtons-method g guess)
    (fixed-point (newton-transform g) guess)
)

(load "sicp_ex_1_35")

(define (cubic a b c)
    (lambda (x)
        (+ (cube x) (* a (square x)) (* b x) c)
    )
)
